const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

async function testAutoScroll() {
  console.log('๐ ุงุฎุชุจุงุฑ ุงูุชููู ุงูุชููุงุฆู ููุนุฑูุถ...\n');

  try {
    // ุฌูุจ ุงูุนุฑูุถ
    console.log('๐ ุฌูุจ ุงูุนุฑูุถ...');
    const offersResponse = await fetch('http://localhost:3001/api/offers');
    const offers = await offersResponse.json();
    
    console.log(`๐ ุฅุฌูุงูู ุนุฏุฏ ุงูุนุฑูุถ: ${offers.length}`);
    
    if (offers.length === 0) {
      console.log('โ ูุง ุชูุฌุฏ ุนุฑูุถ ูุชุงุญุฉ');
      return;
    }

    // ุญุณุงุจ ุนุฏุฏ ุงููุฌููุนุงุช
    const groupsCount = Math.ceil(offers.length / 3);
    console.log(`๐ฆ ุนุฏุฏ ุงููุฌููุนุงุช (3 ุนุฑูุถ ููู ูุฌููุนุฉ): ${groupsCount}`);

    // ุนุฑุถ ูู ูุฌููุนุฉ
    for (let i = 0; i < groupsCount; i++) {
      const startIndex = i * 3;
      const endIndex = Math.min(startIndex + 3, offers.length);
      const groupOffers = offers.slice(startIndex, endIndex);
      
      console.log(`\n๐ ุงููุฌููุนุฉ ${i + 1} (ุงูุนุฑูุถ ${startIndex + 1}-${endIndex}):`);
      groupOffers.forEach((offer, index) => {
        const offerIndex = startIndex + index;
        console.log(`   ${offerIndex + 1}. ${offer.name} - ${offer.price} ุฏุฌ`);
        if (offer.images && offer.images.length > 0) {
          console.log(`      ๐ธ ${offer.images.length} ุตูุฑุฉ ูุชููุฑุฉ`);
        }
        if (offer.discount_price) {
          const discountPercent = Math.round(((offer.price - offer.discount_price) / offer.price) * 100);
          console.log(`      ๐ฏ ุฎุตู ${discountPercent}% (${offer.discount_price} ุฏุฌ)`);
        }
      });
    }

    // ุงุฎุชุจุงุฑ ุงูุชููู
    console.log('\n๐ ูุญุงูุงุฉ ุงูุชููู ุงูุชููุงุฆู:');
    for (let i = 0; i < groupsCount; i++) {
      const startIndex = i * 3;
      console.log(`   ุงูุงูุชูุงู ุฅูู ุงููุฌููุนุฉ ${i + 1} (currentOfferIndex = ${startIndex})`);
      
      // ูุญุงูุงุฉ ุงูุงูุชุธุงุฑ
      await new Promise(resolve => setTimeout(resolve, 1000));
    }

    console.log('\nโ ุงุฎุชุจุงุฑ ุงูุชููู ุงูุชููุงุฆู ููุชูู!');
    console.log('\n๐ ููุงุญุธุงุช:');
    console.log('1. ุงูุนุฑูุถ ุชุธูุฑ 3 ูู ูู ูุฑุฉ');
    console.log('2. ุงูุชููู ุงูุชููุงุฆู ูุญุฏุซ ูู 5 ุซูุงูู');
    console.log('3. ูููู ุงูุชููู ูุฏููุงู ุจุงุณุชุฎุฏุงู ุงููุคุดุฑุงุช');
    console.log('4. ุงูุตูุฑุฉ ุงูุฃููู ูู ูู ุนุฑุถ ุชุธูุฑ ูู ุงูุจุทุงูุฉ');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error.message);
  }
}

testAutoScroll();
